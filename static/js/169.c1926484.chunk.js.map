{"version":3,"file":"static/js/169.c1926484.chunk.js","mappings":"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","sources":["components/ConfirmModal.jsx","components/Search.jsx","utils/spinnerProperty.js","views/Pagination.jsx","views/admin/Category.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst ConfirmModal = ({ message, SetModalClose, confimFunction }) => {\r\n  const handleConfirm = () => {\r\n    confimFunction();\r\n    SetModalClose(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    SetModalClose(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\r\n        <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">\r\n          Confirmation\r\n        </h2>\r\n        <p className=\"text-sm text-gray-600 mb-6\">{message}</p>\r\n        <div className=\"flex justify-end gap-4\">\r\n          <button\r\n            onClick={handleCancel}\r\n            className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            onClick={handleConfirm}\r\n            className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\r\n          >\r\n            Confirm\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import React from \"react\";\r\n\r\nconst Search = ({ setPerPage, searchValue, setSearchValue }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"h-14 bg-slate-600 rounded-t-md flex justify-between items-center px-4\">\r\n        <select\r\n          onChange={(e) => setPerPage(parseInt(e.target.value))}\r\n          className=\"px-3 py-2 rounded font-semibold\"\r\n        >\r\n          <option value=\"5\">5</option>\r\n          <option value=\"10\">10</option>\r\n          <option value=\"15\">15</option>\r\n        </select>\r\n        <input\r\n          value={searchValue}\r\n          onChange={(e) => setSearchValue(e.target.value)}\r\n          className=\"hidden md:block bg-white border border-gray-300 h-10 px-3 py-1 rounded focus:outline-none focus:border-blue-500\"\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","export const overRideStyle = {\r\n  display: \"flex\",\r\n  margin: \"0 auto\",\r\n  height: \"24px\",\r\n  justifyContent: \"center\",\r\n  alignItem: \"center\",\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  MdOutlineKeyboardDoubleArrowLeft,\r\n  MdOutlineKeyboardDoubleArrowRight,\r\n} from \"react-icons/md\";\r\n\r\nconst Pagination = ({\r\n  pageNumber,\r\n  setPageNumber,\r\n  totalItem,\r\n  perPage,\r\n  showItem,\r\n}) => {\r\n  const totalPage = Math.ceil(totalItem / perPage); // Total pages\r\n  let startPage = pageNumber; // Starting page number\r\n  const diff = totalPage - pageNumber;\r\n\r\n  // Adjust startPage if the difference between totalPage and current page is less than showItem\r\n  if (diff <= showItem) {\r\n    startPage = totalPage - showItem + 1;\r\n  }\r\n\r\n  let endPage = startPage < 1 ? showItem : showItem + startPage; // End page number\r\n\r\n  if (startPage <= 0) startPage = 1; // Ensure startPage is valid\r\n  if (endPage > totalPage + 1) endPage = totalPage + 1; // Ensure endPage doesn't exceed total pages\r\n\r\n  const createBtn = () => {\r\n    const btns = [];\r\n    for (let i = startPage; i < endPage; i++) {\r\n      btns.push(\r\n        <li\r\n          key={i}\r\n          onClick={() => setPageNumber(i)}\r\n          className={`${\r\n            pageNumber === i\r\n              ? \"bg-green-600 text-white\"\r\n              : \"bg-slate-600 hover:bg-green-900 text-[#d0d2d6]\"\r\n          } w-[33px] h-[33px] rounded-full flex justify-center items-center cursor-pointer`}\r\n        >\r\n          {i}\r\n        </li>\r\n      );\r\n    }\r\n    return btns;\r\n  };\r\n\r\n  return (\r\n    <ul className=\"flex gap-3 items-center\">\r\n      {/* Previous Button */}\r\n      {pageNumber > 1 && (\r\n        <li\r\n          onClick={() => setPageNumber(pageNumber - 1)}\r\n          className=\"w-[33px] h-[33px] rounded-full flex justify-center items-center bg-slate-400 text-black cursor-pointer hover:bg-indigo-400\"\r\n        >\r\n          <MdOutlineKeyboardDoubleArrowLeft />\r\n        </li>\r\n      )}\r\n\r\n      {/* Page Buttons */}\r\n      {createBtn()}\r\n\r\n      {/* Next Button */}\r\n      {pageNumber < totalPage && (\r\n        <li\r\n          onClick={() => setPageNumber(pageNumber + 1)}\r\n          className=\"w-[33px] h-[33px] rounded-full flex justify-center items-center bg-slate-400 text-black cursor-pointer hover:bg-indigo-400\"\r\n        >\r\n          <MdOutlineKeyboardDoubleArrowRight />\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { LiaEditSolid } from \"react-icons/lia\";\r\nimport { MdAutoDelete } from \"react-icons/md\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from \"../Pagination\";\r\nimport { FaImages } from \"react-icons/fa\";\r\nimport { MdFormatListBulletedAdd } from \"react-icons/md\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport { PropagateLoader } from \"react-spinners\";\r\nimport { overRideStyle } from \"../../utils/spinnerProperty\";\r\nimport {\r\n  categoryAdd,\r\n  messageClear,\r\n  get_category,\r\n  updateCategory,\r\n  deleteCategory,\r\n} from \"../../store/Reducers/categoryReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport Search from \"../../components/Search\";\r\nimport { Cropper } from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport ConfirmModal from \"./../../components/ConfirmModal\";\r\n\r\nconst Category = () => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [perPage, setPerPage] = useState(5);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const [state, setState] = useState({\r\n    categoryName: \"\",\r\n  });\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editId, setEditId] = useState(null);\r\n  const [cropper, setCropper] = useState(null); // Cropper instance\r\n  const [cropImage, setCropImage] = useState(null); // Image to crop\r\n  const [isCropping, setIsCropping] = useState(false); // Toggle cropping modal\r\n  const [images, setImages] = useState(); // Final cropped images\r\n  const [imageShow, setImageShow] = useState(); // Images to display\r\n  const [modalClose, setModalClose] = useState(true);\r\n  const [deleteItem, setDeleteItem] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { loader, successMessage, errorMessage, categories, totalCategory } =\r\n    useSelector((store) => store.category);\r\n\r\n  // handling edit and update in single submit\r\n  const addOrUpdateCategory = (e) => {\r\n    e.preventDefault();\r\n    const error = state.categoryName.trim();\r\n    if (!error) {\r\n      toast.error(\"Category Name required\");\r\n      return;\r\n    }\r\n    if (isEdit) {\r\n      const obj = {\r\n        id: editId,\r\n        categoryName: state.categoryName,\r\n        image: images,\r\n      };\r\n      dispatch(updateCategory(obj));\r\n      setIsEdit(false);\r\n      setEditId(null);\r\n    } else {\r\n      const obj = {\r\n        categoryName: state.categoryName,\r\n        image: images,\r\n      };\r\n      dispatch(categoryAdd(obj));\r\n    }\r\n  };\r\n\r\n  // handlig the new image\r\n  const imageHandle = (e) => {\r\n    const files = e.target.files;\r\n    if (files.length > 0) {\r\n      setCropImage(URL.createObjectURL(files[0]));\r\n      setIsCropping(true);\r\n    }\r\n  };\r\n\r\n  // after posting the data to server\r\n  useEffect(() => {\r\n    if (errorMessage) {\r\n      toast.error(errorMessage);\r\n      dispatch(messageClear());\r\n    }\r\n    if (successMessage) {\r\n      toast.success(successMessage);\r\n      dispatch(messageClear());\r\n      setState({\r\n        categoryName: \"\",\r\n      });\r\n      setImageShow(\"\");\r\n      setImages(\"\");\r\n    }\r\n  }, [successMessage, errorMessage, dispatch]);\r\n\r\n  // to make search in the category and also fetch the data in initial rendering\r\n  useEffect(() => {\r\n    const obj = {\r\n      perPage: parseInt(perPage),\r\n      page: parseInt(currentPage),\r\n      searchValue,\r\n    };\r\n\r\n    dispatch(get_category(obj));\r\n  }, [perPage, currentPage, searchValue]);\r\n\r\n  // to handling the edit option in the category\r\n\r\n  const handleEdit = (category) => {\r\n    setState({\r\n      categoryName: category.categoryName,\r\n    });\r\n    setImages(category.image);\r\n    setImageShow(category.image);\r\n    setEditId(category._id);\r\n    setIsEdit(true);\r\n    setShow(true);\r\n  };\r\n  const handleDelete = () => {\r\n    dispatch(deleteCategory(deleteItem._id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-4 lg:px-8 pb-5\">\r\n      {/* toggle button for add category small screen */}\r\n      <div\r\n        className=\"flex justify-start items-center my-3 gap-3 font-bold cursor-pointer lg:hidden\"\r\n        onClick={() => setShow(!show)}\r\n      >\r\n        <MdFormatListBulletedAdd className=\"text-2xl\" />\r\n        <h4>Add new category</h4>\r\n      </div>\r\n      <div className=\"flex flex-wrap gap-5 relative\">\r\n        {/* Category List Section */}\r\n        <div className=\"w-full lg:w-7/12 bg-white shadow-md rounded-md\">\r\n          {/* Table Header */}\r\n          <Search\r\n            setPerPage={setPerPage}\r\n            searchValue={searchValue}\r\n            setSearchValue={setSearchValue}\r\n          />\r\n          {/* Table Body */}\r\n          <div className=\"p-4\">\r\n            <table className=\"table-auto w-full text-center border-collapse border border-gray-300\">\r\n              <thead>\r\n                <tr className=\"bg-gray-200\">\r\n                  <th className=\"border border-gray-300 px-4 py-2\">No</th>\r\n                  <th className=\"border border-gray-300 px-4 py-2\">Image</th>\r\n                  <th className=\"border border-gray-300 px-4 py-2\">\r\n                    Category Name\r\n                  </th>\r\n                  <th className=\"border border-gray-300 px-4 py-2\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {categories.map((item, index) => (\r\n                  <tr\r\n                    key={item._id}\r\n                    className=\"hover:bg-gray-100 h-[60px] border-t\"\r\n                  >\r\n                    <td className=\"border border-gray-300 px-4 py-2\">\r\n                      {index + 1}\r\n                    </td>\r\n                    <td className=\"border border-gray-300 px-4 py-2\">\r\n                      <img\r\n                        src={item.image}\r\n                        alt={item.categoryName}\r\n                        className=\"w-12 h-12 mx-auto\"\r\n                      />\r\n                    </td>\r\n                    <td className=\"border border-gray-300 px-4 py-2\">\r\n                      {item.categoryName}\r\n                    </td>\r\n                    <td className=\"border border-gray-300 px-4 py-2\">\r\n                      <div className=\"flex justify-center gap-3\">\r\n                        <Link\r\n                          to=\"#\"\r\n                          onClick={() => handleEdit(item)}\r\n                          className=\"px-3 py-2 rounded-full hover:bg-blue-200 text-lg\"\r\n                        >\r\n                          <LiaEditSolid />\r\n                        </Link>\r\n                        <Link\r\n                          to=\"#\"\r\n                          onClick={() => {\r\n                            setDeleteItem(item);\r\n                            setModalClose(false);\r\n                          }}\r\n                          className=\"px-3 py-2 rounded-full hover:bg-blue-200 text-lg\"\r\n                        >\r\n                          <MdAutoDelete />\r\n                        </Link>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            {!modalClose && (\r\n              <div>\r\n                <ConfirmModal\r\n                  message=\"Are you sure want to delete\"\r\n                  SetModalClose={setModalClose}\r\n                  confimFunction={handleDelete}\r\n                />\r\n              </div>\r\n            )}\r\n            {/* pagination */}\r\n            <div className=\"w-full flex justify-end mt-4 bottom-4 right-4\">\r\n              <Pagination\r\n                pageNumber={currentPage}\r\n                setPageNumber={setCurrentPage}\r\n                totalItem={totalCategory}\r\n                perPage={perPage}\r\n                showItem={3}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Add New Category Section */}\r\n        <div\r\n          className={`w-[320px] lg:w-4/12 translate-x-100 lg:relative lg:right-0 fixed ${\r\n            show ? `right-0` : `-right-[340px]`\r\n          } bg-slate-600 shadow-md rounded-md p-5 z-[9999] top-10 lg:top-0 transition-all duration-500  `}\r\n        >\r\n          <div className=\"flex justify-between\">\r\n            <h2 className=\"text-lg font-semibold mb-4 text-white text-center\">\r\n              {isEdit ? \"Update Category\" : \" Add New Category\"}\r\n            </h2>\r\n            {/* close button */}\r\n            {show && (\r\n              <span\r\n                onClick={() => {\r\n                  setShow(false);\r\n                  setState({ ...state, categoryName: \"\" });\r\n                  setImageShow(\"\");\r\n                  setIsEdit(false);\r\n                }}\r\n                className=\"text-2xl  text-white hover:cursor-pointer hover:bg-red-600 rounded-full w-8 h-8 flex justify-center items-center\"\r\n              >\r\n                <IoClose />\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          {/* Add Category Form Placeholder */}\r\n          <form\r\n            className=\"mt-10 flex flex-col gap-3\"\r\n            onSubmit={addOrUpdateCategory}\r\n          >\r\n            <div>\r\n              <label htmlFor=\"categoryName \" className=\"text-white\">\r\n                Category Name\r\n              </label>\r\n              <input\r\n                id=\"categoryName\"\r\n                name=\"categoryName\"\r\n                value={state.categoryName}\r\n                onChange={(e) => {\r\n                  setState({ categoryName: e.target.value });\r\n                }}\r\n                type=\"text\"\r\n                placeholder=\"Category Name\"\r\n                className=\"w-full px-3 py-2 mb-3 border border-gray-300 rounded focus:outline-none focus:border-blue-500\"\r\n              />\r\n            </div>\r\n            {/* images for category */}\r\n            <div className=\"flex w-full border border-dashed \">\r\n              <label\r\n                htmlFor=\"image\"\r\n                className=\" h-[238px] w-full flex flex-col justify-center items-center cursor-pointer text-white \"\r\n              >\r\n                {imageShow ? (\r\n                  <img className=\"h-full w-full\" src={imageShow} alt=\"img\" />\r\n                ) : (\r\n                  <>\r\n                    <span>\r\n                      <FaImages />\r\n                    </span>\r\n                    <span>Upload image</span>\r\n                  </>\r\n                )}\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"image\"\r\n                id=\"image\"\r\n                className=\"hidden\"\r\n                accept=\"image/*\"\r\n                onChange={imageHandle}\r\n              />\r\n            </div>\r\n\r\n            <button\r\n              disabled={loader}\r\n              type=\"submit\"\r\n              className=\"w-full bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n            >\r\n              {loader ? (\r\n                <PropagateLoader color=\"#fff\" cssOverride={overRideStyle} />\r\n              ) : isEdit ? (\r\n                \"Update Category\"\r\n              ) : (\r\n                \"Add Category\"\r\n              )}\r\n            </button>\r\n            {/* modal for cropping*/}\r\n            <div>\r\n              {isCropping && (\r\n                <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n                  <div className=\"bg-white rounded-lg p-6 w-full max-w-lg shadow-lg\">\r\n                    <h3 className=\"text-lg font-semibold mb-4\">Crop Image</h3>\r\n                    <Cropper\r\n                      className=\"w-full h-64\"\r\n                      src={cropImage}\r\n                      aspectRatio={1}\r\n                      viewMode={1}\r\n                      guides={true}\r\n                      scalable={true}\r\n                      cropBoxResizable={true}\r\n                      onInitialized={(instance) => setCropper(instance)}\r\n                    />\r\n                    <div className=\"mt-4 flex justify-end space-x-3\">\r\n                      <button\r\n                        className=\"px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          if (cropper) {\r\n                            const croppedCanvas = cropper.getCroppedCanvas();\r\n                            croppedCanvas.toBlob((blob) => {\r\n                              if (blob) {\r\n                                const file = new File(\r\n                                  [blob],\r\n                                  \"cropped-image.jpg\",\r\n                                  { type: \"image/jpeg\" }\r\n                                );\r\n                                setImages(file);\r\n                                const imageUrl = URL.createObjectURL(file);\r\n                                setImageShow(imageUrl); // Update displayed images with the new image URL\r\n                                setIsCropping(false);\r\n                              }\r\n                            });\r\n                          }\r\n                        }}\r\n                      >\r\n                        Crop\r\n                      </button>\r\n                      <button\r\n                        className=\"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600\"\r\n                        onClick={() => setIsCropping(false)}\r\n                      >\r\n                        Cancel\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n"],"names":["_ref","message","SetModalClose","confimFunction","_jsx","className","children","_jsxs","onClick","handleCancel","handleConfirm","setPerPage","searchValue","setSearchValue","onChange","e","parseInt","target","value","type","placeholder","overRideStyle","display","margin","height","justifyContent","alignItem","pageNumber","setPageNumber","totalItem","perPage","showItem","totalPage","Math","ceil","startPage","endPage","MdOutlineKeyboardDoubleArrowLeft","createBtn","btns","i","push","MdOutlineKeyboardDoubleArrowRight","Category","useState","currentPage","setCurrentPage","show","setShow","state","setState","categoryName","isEdit","setIsEdit","editId","setEditId","cropper","setCropper","cropImage","setCropImage","isCropping","setIsCropping","images","setImages","imageShow","setImageShow","modalClose","setModalClose","deleteItem","setDeleteItem","dispatch","useDispatch","loader","successMessage","errorMessage","categories","totalCategory","useSelector","store","category","useEffect","toast","error","messageClear","success","obj","page","get_category","MdFormatListBulletedAdd","Search","map","item","index","src","image","alt","Link","to","handleEdit","_id","LiaEditSolid","MdAutoDelete","ConfirmModal","handleDelete","deleteCategory","Pagination","IoClose","onSubmit","preventDefault","trim","id","updateCategory","categoryAdd","htmlFor","name","_Fragment","FaImages","accept","files","length","URL","createObjectURL","disabled","PropagateLoader","color","cssOverride","Cropper","aspectRatio","viewMode","guides","scalable","cropBoxResizable","onInitialized","instance","getCroppedCanvas","toBlob","blob","file","File","imageUrl"],"sourceRoot":""}