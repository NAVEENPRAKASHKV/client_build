{"version":3,"file":"static/js/59.ce6edcad.chunk.js","mappings":"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","sources":["utils/spinnerProperty.js","utils/validationProduct.js","views/seller/AddProduct.jsx"],"sourcesContent":["export const overRideStyle = {\r\n  display: \"flex\",\r\n  margin: \"0 auto\",\r\n  height: \"24px\",\r\n  justifyContent: \"center\",\r\n  alignItem: \"center\",\r\n};\r\n","export const validationProduct = (state) => {\r\n  const { brand, name, price, description, discount, stock } = state;\r\n  const errors = {};\r\n\r\n  // Helper function to check if a value is blank or invalid\r\n  const isBlank = (value) => {\r\n    if (value === null || value === undefined) return true;\r\n    if (typeof value === \"string\") return value.trim() === \"\";\r\n    return false;\r\n  };\r\n\r\n  // Validation rules\r\n  if (isBlank(brand)) {\r\n    errors.brand = \"Brand is required\";\r\n  }\r\n  if (isBlank(name)) {\r\n    errors.name = \"Name is required\";\r\n  }\r\n  if (isBlank(price) || isNaN(price) || price < 1) {\r\n    errors.price = \"Price should be a number greater than 0\";\r\n  }\r\n  if (isBlank(description)) {\r\n    errors.description = \"Description is required\";\r\n  }\r\n  if (isBlank(discount) || isNaN(discount) || discount < 0 || discount > 100) {\r\n    errors.discount = \"Discount should be a number between 0 and 100\";\r\n  }\r\n  if (isBlank(stock) || isNaN(stock) || stock < 0) {\r\n    errors.stock = \"Stock should be a number greater than or equal to 0\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaRegImages } from \"react-icons/fa\";\r\nimport { IoMdCloseCircle } from \"react-icons/io\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { get_category } from \"../../store/Reducers/categoryReducer\";\r\nimport { add_product, messageClear } from \"../../store/Reducers/productReducer\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { PropagateLoader } from \"react-spinners\";\r\nimport { overRideStyle } from \"./../../utils/spinnerProperty\";\r\nimport { Cropper } from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport { validationProduct } from \"./../../utils/validationProduct\";\r\n\r\nconst AddProduct = () => {\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    discount: \"\",\r\n    price: \"\",\r\n    brand: \"\",\r\n    stock: \"\",\r\n  });\r\n  const [cateShow, setCateShow] = useState(false); //toggle the category input\r\n  const [category, setCategory] = useState(\"\"); //to set category input from the modal\r\n  const [allCategory, setAllCategory] = useState([]); //all category\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const { categories } = useSelector((store) => store.category);\r\n  const { successMessage, errorMessage, loader } = useSelector(\r\n    (store) => store.product\r\n  );\r\n  const [cropper, setCropper] = useState(null); // Cropper instance\r\n  const [cropImage, setCropImage] = useState(null); // Image to crop\r\n  const [isCropping, setIsCropping] = useState(false); // Toggle cropping modal\r\n  const [images, setImages] = useState([]); // Final cropped images\r\n  const [imageShow, setImageShow] = useState([]); // Images to display\r\n\r\n  //fetchin the category and update category list\r\n  useEffect(() => {\r\n    dispatch(\r\n      get_category({\r\n        perPage: \"\",\r\n        page: \"\",\r\n        searchValue: \"\",\r\n      })\r\n    );\r\n  }, []);\r\n  useEffect(() => {\r\n    setAllCategory(categories);\r\n  }, [categories]);\r\n  useEffect(() => {\r\n    if (successMessage) {\r\n      toast.success(successMessage);\r\n      dispatch(messageClear());\r\n      setState({\r\n        name: \"\",\r\n        description: \"\",\r\n        discount: \"\",\r\n        price: \"\",\r\n        brand: \"\",\r\n        stock: \"\",\r\n      });\r\n      setImageShow([]);\r\n      setImages([]);\r\n      setCategory(\"\");\r\n    }\r\n    if (errorMessage) {\r\n      toast.error(errorMessage);\r\n      dispatch(messageClear());\r\n    }\r\n  }, [errorMessage, successMessage]);\r\n\r\n  // handling removing the images\r\n  const handleRemove = (i) => {\r\n    const filterdImages = images.filter((_, index) => index !== i);\r\n    const filterdUrl = imageShow.filter((_, index) => index !== i);\r\n    setImages(filterdImages);\r\n    setImageShow(filterdUrl);\r\n  };\r\n  //handle input data\r\n  const inputHandle = (e) => {\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  // to change image of already uploaded\r\n  const changeImage = (img, index) => {\r\n    if (img) {\r\n      let tempUrl = imageShow;\r\n      let tempImages = images;\r\n      tempImages[index] = img;\r\n      tempUrl[index] = { url: URL.createObjectURL(img) };\r\n      setImages([...tempImages]);\r\n      setImageShow([...imageShow]);\r\n    }\r\n  };\r\n  // handle new image upload\r\n  const imageHandle = (e) => {\r\n    const files = e.target.files;\r\n    const length = files.length;\r\n    if (length > 0) {\r\n      setCropImage(URL.createObjectURL(files[0]));\r\n      setIsCropping(true);\r\n    }\r\n  };\r\n  // category search\r\n  const categorySearch = (e) => {\r\n    const value = e.target.value;\r\n    setSearchValue(value);\r\n\r\n    if (value) {\r\n      let srcValue = allCategory.filter((c) =>\r\n        c.categoryName.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setAllCategory(srcValue);\r\n    } else {\r\n      setAllCategory(categories);\r\n    }\r\n  };\r\n\r\n  const handleAdd = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validation checks form values and images\r\n    const errors = validationProduct(state);\r\n    if (Object.keys(errors).length > 0) {\r\n      for (let error of Object.values(errors)) {\r\n        toast.error(error);\r\n      }\r\n      return;\r\n    }\r\n    if (!images || images.length === 0) {\r\n      toast.error(\"Image of the product is mandatory\");\r\n      return;\r\n    }\r\n\r\n    // Create FormData\r\n    const formData = new FormData();\r\n    formData.append(\"brand\", state.brand);\r\n    formData.append(\"description\", state.description);\r\n    formData.append(\"discount\", state.discount);\r\n    formData.append(\"name\", state.name);\r\n    formData.append(\"price\", state.price);\r\n    formData.append(\"stock\", state.stock);\r\n    formData.append(\"category\", category);\r\n    formData.append(\"shopName\", \"EasyShop\");\r\n\r\n    for (let index = 0; index < images.length; index++) {\r\n      formData.append(\"images\", images[index]);\r\n    }\r\n    dispatch(add_product(formData));\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-2 lg:pr-7 \">\r\n      <div className=\"my-5\">\r\n        <h1 className=\"text-xl font-bold\">Add Product</h1>\r\n      </div>\r\n      <div className=\"w-full p-4 bg-slate-600 rounded-md\">\r\n        <div className=\"flex justify-between items-center pb-4\">\r\n          <h1 className=\"text-white text-xl font-semibold\">Product Details</h1>\r\n          <Link\r\n            to=\"/seller/dashboard/all-product\"\r\n            className=\"bg-blue-500 hover:shadow-blue-500/50 hover:shadow-lg text-white rounded-sm px-7 py-2 my-2\"\r\n          >\r\n            All Products\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <form onSubmit={handleAdd}>\r\n            {/* product and Brand */}\r\n            <div className=\"flex flex-col mb-3 md:flex-row gap-4 w-full text-white\">\r\n              <div className=\"flex flex-col w-full gap-1\">\r\n                <label htmlFor=\"name\">Product Name</label>\r\n                <input\r\n                  className=\"px-4 py-2 focus:border-indigo-500 outline-none  border border-slate-700 rounded-md text-black \"\r\n                  onChange={inputHandle}\r\n                  value={state.name}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  placeholder=\"Product Name\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex flex-col w-full gap-1\">\r\n                <label htmlFor=\"brand\">Product Brand</label>\r\n                <input\r\n                  className=\"px-4 py-2 focus:border-indigo-500 outline-none text-black border border-slate-700 rounded-md \"\r\n                  onChange={inputHandle}\r\n                  value={state.brand}\r\n                  type=\"text\"\r\n                  name=\"brand\"\r\n                  id=\"brand\"\r\n                  placeholder=\"Brand Name\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col mb-3 md:flex-row gap-4 w-full text-white\">\r\n              {/* Category */}\r\n              <div className=\"flex flex-col w-full gap-1 relative\">\r\n                <label htmlFor=\"category\">Category</label>\r\n                <input\r\n                  readOnly\r\n                  onClick={() => setCateShow(!cateShow)}\r\n                  className=\"px-4 py-2 focus:border-indigo-500 outline-none  border border-slate-700 rounded-md text-black\"\r\n                  onChange={inputHandle}\r\n                  value={category}\r\n                  type=\"text\"\r\n                  id=\"category\"\r\n                  placeholder=\"--select category--\"\r\n                />\r\n\r\n                <div\r\n                  className={`absolute top-[100%] bg-lime-900 w-full transition-all ${\r\n                    cateShow ? \"scale-100\" : \"scale-0\"\r\n                  } `}\r\n                >\r\n                  <div className=\"w-full px-4 py-2 fixed\">\r\n                    <input\r\n                      value={searchValue}\r\n                      onChange={categorySearch}\r\n                      className=\"px-3 py-1 w-full focus:border-indigo-500 outline-none bg-transparent border border-slate-100 rounded-md text-[#d0d2d6] overflow-hidden\"\r\n                      type=\"text\"\r\n                      placeholder=\"search\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"pt-14\"></div>\r\n                  <div className=\"flex justify-start items-start flex-col h-[200px] overflow-x-scrool\">\r\n                    {allCategory.map((c, i) => (\r\n                      <span\r\n                        key={c._id}\r\n                        className={`px-4 py-2 hover:bg-black hover:text-white hover:shadow-lg w-full cursor-pointer ${\r\n                          category === c.categoryName && \"bg-indigo-700\"\r\n                        }`}\r\n                        onClick={() => {\r\n                          setCateShow(false);\r\n                          setCategory(c.categoryName);\r\n                          setSearchValue(\"\");\r\n                          setAllCategory(categories);\r\n                        }}\r\n                      >\r\n                        {c.categoryName}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* procuct stock */}\r\n              <div className=\"flex flex-col w-full gap-1\">\r\n                <label htmlFor=\"stock\">Product Stock</label>\r\n                <input\r\n                  className=\"px-4 py-2 focus:border-indigo-500 outline-none  border border-slate-700 rounded-md text-black\"\r\n                  onChange={inputHandle}\r\n                  value={state.stock}\r\n                  type=\"number\"\r\n                  name=\"stock\"\r\n                  id=\"stock\"\r\n                  placeholder=\"Stock\"\r\n                />\r\n              </div>\r\n            </div>\r\n            {/* price and discount  */}\r\n            <div className=\"flex flex-col mb-3 md:flex-row gap-4 w-full text-white\">\r\n              <div className=\"flex flex-col w-full gap-1\">\r\n                <label htmlFor=\"price\">Price</label>\r\n                <input\r\n                  className=\"px-4 py-2 focus:border-indigo-500 outline-none  border border-slate-700 rounded-md text-black\"\r\n                  onChange={inputHandle}\r\n                  value={state.price}\r\n                  type=\"number\"\r\n                  name=\"price\"\r\n                  id=\"price\"\r\n                  placeholder=\"price\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex flex-col w-full gap-1\">\r\n                <label htmlFor=\"discount\">Discount</label>\r\n                <input\r\n                  className=\"px-4 py-2 focus:border-indigo-500 outline-none  border border-slate-700 rounded-md text-black\"\r\n                  onChange={inputHandle}\r\n                  value={state.discount}\r\n                  type=\"number\"\r\n                  name=\"discount\"\r\n                  id=\"discount\"\r\n                  placeholder=\"discount by %\"\r\n                />\r\n              </div>\r\n            </div>\r\n            {/* description */}\r\n            <div className=\"flex flex-col w-full gap-1 mb-5\">\r\n              <label htmlFor=\"description\" className=\"text-[#d0d2d6]\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                className=\"px-4 py-2 focus:border-indigo-500 outline-none  border border-slate-700 rounded-md text-black\"\r\n                onChange={inputHandle}\r\n                value={state.description}\r\n                name=\"description\"\r\n                id=\"description\"\r\n                placeholder=\"Description\"\r\n                cols=\"10\"\r\n                rows=\"4\"\r\n              ></textarea>\r\n            </div>\r\n            {/* images */}\r\n            <div className=\"grid grid-col-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 w-full  gap-2 mb-5\">\r\n              {/* uploaded images */}\r\n              {imageShow.map((img, i) => (\r\n                <div className=\"h-[180px] w-[180px] relative\">\r\n                  <label htmlFor={i} className=\"cursor-pointer\">\r\n                    {/* display uploaded images */}\r\n                    <img\r\n                      className=\"w-full h-full rounded-sm\"\r\n                      src={img.url}\r\n                      alt=\"\"\r\n                    />\r\n                  </label>\r\n                  {/* replace images */}\r\n                  <input\r\n                    onChange={(e) => changeImage(e.target.files[0], i)}\r\n                    type=\"file\"\r\n                    id={i}\r\n                    className=\"hidden\"\r\n                  />\r\n                  {/* remove icon */}\r\n                  <span\r\n                    onClick={() => handleRemove(i)}\r\n                    className=\"absolute right-4  top-2 z-50 w-[20px] h-[20px] rounded-full bg-white hover:bg-red-500 flex justify-center items-center cursor-pointer\"\r\n                  >\r\n                    <IoMdCloseCircle />\r\n                  </span>\r\n                </div>\r\n              ))}\r\n              {/* uploading new images */}\r\n              <label\r\n                htmlFor=\"image\"\r\n                className=\"flex flex-col justify-center items-center h-[180px] w-[180px] bg-white cursor-pointer\"\r\n              >\r\n                <span>\r\n                  <FaRegImages />\r\n                </span>\r\n                <span>Select Image</span>\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"image\"\r\n                className=\"hidden\"\r\n                accept=\"image/*\"\r\n                onChange={imageHandle}\r\n              />\r\n            </div>\r\n            {/* button to add product */}\r\n            <div className=\"\">\r\n              <button\r\n                disabled={loader}\r\n                className=\"bg-red-600 py-2 px-3 rounded-lg text-white font-bold\"\r\n              >\r\n                {loader ? (\r\n                  <PropagateLoader color=\"#fff\" cssOverride={overRideStyle} />\r\n                ) : (\r\n                  \"Add Category\"\r\n                )}\r\n              </button>\r\n            </div>\r\n            {/* modal for cropping*/}\r\n            <div>\r\n              {isCropping && (\r\n                <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n                  <div className=\"bg-white rounded-lg p-6 w-full max-w-lg shadow-lg\">\r\n                    <h3 className=\"text-lg font-semibold mb-4\">Crop Image</h3>\r\n                    <Cropper\r\n                      className=\"w-full h-64\"\r\n                      src={cropImage}\r\n                      aspectRatio={1}\r\n                      viewMode={1}\r\n                      guides={true}\r\n                      scalable={true}\r\n                      cropBoxResizable={true}\r\n                      onInitialized={(instance) => setCropper(instance)}\r\n                    />\r\n                    <div className=\"mt-4 flex justify-end space-x-3\">\r\n                      <button\r\n                        className=\"px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          if (cropper) {\r\n                            const croppedCanvas = cropper.getCroppedCanvas();\r\n                            croppedCanvas.toBlob((blob) => {\r\n                              if (blob) {\r\n                                const file = new File(\r\n                                  [blob],\r\n                                  \"cropped-image.jpg\",\r\n                                  { type: \"image/jpeg\" }\r\n                                );\r\n                                setImages([...images, file]);\r\n                                const imageUrl = URL.createObjectURL(file);\r\n                                setImageShow([...imageShow, { url: imageUrl }]); // Update displayed images with the new image URL\r\n                                setIsCropping(false);\r\n                              }\r\n                            });\r\n                          }\r\n                        }}\r\n                      >\r\n                        Crop\r\n                      </button>\r\n                      <button\r\n                        className=\"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600\"\r\n                        onClick={() => setIsCropping(false)}\r\n                      >\r\n                        Cancel\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n"],"names":["overRideStyle","display","margin","height","justifyContent","alignItem","validationProduct","state","brand","name","price","description","discount","stock","errors","isBlank","value","undefined","trim","isNaN","AddProduct","setState","useState","cateShow","setCateShow","category","setCategory","allCategory","setAllCategory","searchValue","setSearchValue","dispatch","useDispatch","categories","useSelector","store","successMessage","errorMessage","loader","product","cropper","setCropper","cropImage","setCropImage","isCropping","setIsCropping","images","setImages","imageShow","setImageShow","useEffect","get_category","perPage","page","toast","success","messageClear","error","inputHandle","e","target","_jsxs","className","children","_jsx","Link","to","onSubmit","preventDefault","Object","keys","length","values","formData","FormData","append","index","add_product","htmlFor","onChange","type","id","placeholder","readOnly","onClick","srcValue","filter","c","categoryName","toLowerCase","includes","map","i","_id","cols","rows","img","src","url","alt","changeImage","tempUrl","tempImages","URL","createObjectURL","files","filterdImages","_","filterdUrl","handleRemove","IoMdCloseCircle","FaRegImages","accept","disabled","PropagateLoader","color","cssOverride","Cropper","aspectRatio","viewMode","guides","scalable","cropBoxResizable","onInitialized","instance","getCroppedCanvas","toBlob","blob","file","File","imageUrl"],"sourceRoot":""}