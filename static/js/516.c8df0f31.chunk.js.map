{"version":3,"file":"static/js/516.c8df0f31.chunk.js","mappings":"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","sources":["components/Search.jsx","views/Pagination.jsx","views/admin/Orders.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Search = ({ setPerPage, searchValue, setSearchValue }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"h-14 bg-slate-600 rounded-t-md flex justify-between items-center px-4\">\r\n        <select\r\n          onChange={(e) => setPerPage(parseInt(e.target.value))}\r\n          className=\"px-3 py-2 rounded font-semibold\"\r\n        >\r\n          <option value=\"5\">5</option>\r\n          <option value=\"10\">10</option>\r\n          <option value=\"15\">15</option>\r\n        </select>\r\n        <input\r\n          value={searchValue}\r\n          onChange={(e) => setSearchValue(e.target.value)}\r\n          className=\"hidden md:block bg-white border border-gray-300 h-10 px-3 py-1 rounded focus:outline-none focus:border-blue-500\"\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport {\r\n  MdOutlineKeyboardDoubleArrowLeft,\r\n  MdOutlineKeyboardDoubleArrowRight,\r\n} from \"react-icons/md\";\r\n\r\nconst Pagination = ({\r\n  pageNumber,\r\n  setPageNumber,\r\n  totalItem,\r\n  perPage,\r\n  showItem,\r\n}) => {\r\n  const totalPage = Math.ceil(totalItem / perPage); // Total pages\r\n  let startPage = pageNumber; // Starting page number\r\n  const diff = totalPage - pageNumber;\r\n\r\n  // Adjust startPage if the difference between totalPage and current page is less than showItem\r\n  if (diff <= showItem) {\r\n    startPage = totalPage - showItem + 1;\r\n  }\r\n\r\n  let endPage = startPage < 1 ? showItem : showItem + startPage; // End page number\r\n\r\n  if (startPage <= 0) startPage = 1; // Ensure startPage is valid\r\n  if (endPage > totalPage + 1) endPage = totalPage + 1; // Ensure endPage doesn't exceed total pages\r\n\r\n  const createBtn = () => {\r\n    const btns = [];\r\n    for (let i = startPage; i < endPage; i++) {\r\n      btns.push(\r\n        <li\r\n          key={i}\r\n          onClick={() => setPageNumber(i)}\r\n          className={`${\r\n            pageNumber === i\r\n              ? \"bg-green-600 text-white\"\r\n              : \"bg-slate-600 hover:bg-green-900 text-[#d0d2d6]\"\r\n          } w-[33px] h-[33px] rounded-full flex justify-center items-center cursor-pointer`}\r\n        >\r\n          {i}\r\n        </li>\r\n      );\r\n    }\r\n    return btns;\r\n  };\r\n\r\n  return (\r\n    <ul className=\"flex gap-3 items-center\">\r\n      {/* Previous Button */}\r\n      {pageNumber > 1 && (\r\n        <li\r\n          onClick={() => setPageNumber(pageNumber - 1)}\r\n          className=\"w-[33px] h-[33px] rounded-full flex justify-center items-center bg-slate-400 text-black cursor-pointer hover:bg-indigo-400\"\r\n        >\r\n          <MdOutlineKeyboardDoubleArrowLeft />\r\n        </li>\r\n      )}\r\n\r\n      {/* Page Buttons */}\r\n      {createBtn()}\r\n\r\n      {/* Next Button */}\r\n      {pageNumber < totalPage && (\r\n        <li\r\n          onClick={() => setPageNumber(pageNumber + 1)}\r\n          className=\"w-[33px] h-[33px] rounded-full flex justify-center items-center bg-slate-400 text-black cursor-pointer hover:bg-indigo-400\"\r\n        >\r\n          <MdOutlineKeyboardDoubleArrowRight />\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { CiCircleChevDown } from \"react-icons/ci\";\r\nimport Pagination from \"./../Pagination\";\r\nimport Search from \"../../components/Search\";\r\nimport { get_admin_orders } from \"../../store/Reducers/orderReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FaRegEdit } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Orders = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [perPage, setPerPage] = useState(5);\r\n  const [show, setShow] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const { myOrders, totalOrder } = useSelector((store) => store.order);\r\n\r\n  useEffect(() => {\r\n    const data = {\r\n      searchValue,\r\n      page: currentPage,\r\n      perPage,\r\n    };\r\n    dispatch(get_admin_orders(data));\r\n  }, [currentPage, searchValue, perPage, dispatch]);\r\n\r\n  return (\r\n    <div className=\"px-2 md:pr-7\">\r\n      <div className=\"w-full p-4\">\r\n        {/* header of order list */}\r\n        <Search\r\n          setPerPage={setPerPage}\r\n          searchValue={searchValue}\r\n          setSearchValue={setSearchValue}\r\n        />\r\n        {/* content of order table*/}\r\n        <div className=\"relative overflow-x-auto\">\r\n          <div>\r\n            {/* table heading */}\r\n            <div className=\" bg-slate-600 p-2 flex\">\r\n              <div className=\"font-bold uppercase text-white text-sm w-[25%] \">\r\n                Order Id\r\n              </div>\r\n              <div className=\"font-bold uppercase text-white text-sm w-[13%]  \">\r\n                Price\r\n              </div>\r\n              <div className=\"font-bold uppercase text-white text-sm w-[18%]  \">\r\n                Payment Status\r\n              </div>\r\n              <div className=\"font-bold uppercase text-white text-sm w-[18%] \">\r\n                order status\r\n              </div>\r\n              <div className=\"font-bold uppercase text-white text-sm w-[18%] \">\r\n                Action\r\n              </div>\r\n              <div\r\n                onClick={() => setShow(\"\")}\r\n                className=\"font-bold uppercase text-white text-lg w-[8%] cursor-pointer  \"\r\n              >\r\n                <CiCircleChevDown />\r\n              </div>\r\n            </div>\r\n            {/* table content */}\r\n            {myOrders.map((product) => (\r\n              <div className=\"bg-white\">\r\n                <div className=\"  p-2 my-2 flex\">\r\n                  <div className=\" text-black text-sm w-[25%] \">\r\n                    {product._id}\r\n                  </div>\r\n                  <div className=\" text-black text-sm w-[13%]  \">\r\n                    {product.price}\r\n                  </div>\r\n                  <div className=\"  text-black text-sm w-[18%]  \">\r\n                    {product.payment_status}\r\n                  </div>\r\n                  <div className=\" text-black text-sm w-[18%] \">\r\n                    {product.delivery_status}\r\n                  </div>\r\n                  <div className=\" text-black text-sm w-[18%] \">\r\n                    <Link to={`/admin/dashboard/order/details/${product._id}`}>\r\n                      <FaRegEdit />\r\n                    </Link>\r\n                  </div>\r\n                  <div\r\n                    className=\" text-black text-lg w-[8%] cursor-pointer  \"\r\n                    onClick={() => setShow(product._id)}\r\n                  >\r\n                    <CiCircleChevDown />\r\n                  </div>\r\n                </div>\r\n                {/* other orders along with main order */}\r\n                {product?.suborders.map((subOrd) => (\r\n                  <div\r\n                    className={`${\r\n                      show === product._id ? \"block\" : \"hidden\"\r\n                    }  p-2  flex bg-zinc-200`}\r\n                  >\r\n                    <div className=\" text-black text-sm w-[25%] \">\r\n                      {subOrd._id}\r\n                    </div>\r\n                    <div className=\" text-black text-sm w-[13%]  \">\r\n                      {subOrd.price}\r\n                    </div>\r\n                    <div className=\"  text-black text-sm w-[18%]  \">\r\n                      {subOrd.payment_status}\r\n                    </div>\r\n                    <div className=\" text-black text-sm w-[18%] \">\r\n                      {subOrd.delivery_status}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {/* pagination */}\r\n        <div className=\"w-full flex justify-end mt-4 bottom-4 right-4\">\r\n          <Pagination\r\n            pageNumber={currentPage}\r\n            setPageNumber={setCurrentPage}\r\n            totalItem={totalOrder}\r\n            perPage={perPage}\r\n            showItem={3}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n"],"names":["_ref","setPerPage","searchValue","setSearchValue","_jsx","children","_jsxs","className","onChange","e","parseInt","target","value","type","placeholder","pageNumber","setPageNumber","totalItem","perPage","showItem","totalPage","Math","ceil","startPage","endPage","onClick","MdOutlineKeyboardDoubleArrowLeft","createBtn","btns","i","push","MdOutlineKeyboardDoubleArrowRight","Orders","currentPage","setCurrentPage","useState","show","setShow","dispatch","useDispatch","myOrders","totalOrder","useSelector","store","order","useEffect","data","page","get_admin_orders","Search","CiCircleChevDown","map","product","_id","price","payment_status","delivery_status","Link","to","FaRegEdit","suborders","subOrd","Pagination"],"sourceRoot":""}