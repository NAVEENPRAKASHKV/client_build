{"version":3,"file":"static/js/522.7b62ee13.chunk.js","mappings":"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","sources":["views/admin/componets/SummaryDashboard.jsx","views/admin/componets/ChartDashboard.jsx","views/admin/AdminDashboard.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\nimport { MdOutlineProductionQuantityLimits } from \"react-icons/md\";\r\nimport { MdOutlineSell } from \"react-icons/md\";\r\nimport { GiShoppingCart } from \"react-icons/gi\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { get_admin_dashboard_data } from \"../../../store/Reducers/dashboardReducer\";\r\n\r\nconst SummaryDashboard = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(get_admin_dashboard_data());\r\n  }, [dispatch]);\r\n  const {\r\n    allSalesRevenue = 0,\r\n    allOrders = 0,\r\n    allProducts = 0,\r\n    allSellers = 0,\r\n  } = useSelector((store) => store.dashboard);\r\n  return (\r\n    <div>\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 xl:grid-cols-4 gap-7 \">\r\n        {/* Total sales */}\r\n        <div className=\"w-[300px] xl:w-[200px] h-[70px] rounded-md bg-white flex justify-between  items-center px-3\">\r\n          <div>\r\n            <div className=\"flex justify-start items-center gap-1\">\r\n              <FaRupeeSign />\r\n              <h3 className=\"font-bold text-xl\">{allSalesRevenue}</h3>\r\n            </div>\r\n            <h6>Total Sales</h6>\r\n          </div>\r\n          <div className=\"w-10 h-10 rounded-full bg-slate-700 flex justify-center items-center\">\r\n            <FaRupeeSign className=\"text-2xl\" color=\"#fff\" />\r\n          </div>\r\n        </div>\r\n        {/* Total Products */}\r\n        <div className=\"w-[300px] xl:w-[200px] h-[70px] rounded-md bg-white flex justify-between  items-center px-3\">\r\n          <div>\r\n            <div className=\"flex justify-start items-center gap-1\">\r\n              <h3 className=\"font-bold text-xl\">{allProducts}</h3>\r\n            </div>\r\n            <h6>Products</h6>\r\n          </div>\r\n          <div className=\"w-10 h-10 rounded-full bg-slate-700 flex justify-center items-center\">\r\n            <MdOutlineProductionQuantityLimits\r\n              className=\"text-2xl\"\r\n              color=\"#fff\"\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Total sellers */}\r\n        <div className=\"w-[300px] xl:w-[200px] h-[70px] rounded-md bg-white flex justify-between  items-center px-3\">\r\n          <div>\r\n            <div className=\"flex justify-start items-center gap-1\">\r\n              <h3 className=\"font-bold text-xl\">{allSellers}</h3>\r\n            </div>\r\n            <h6>Sellers</h6>\r\n          </div>\r\n          <div className=\"w-10 h-10 rounded-full bg-slate-700 flex justify-center items-center\">\r\n            <MdOutlineSell className=\"text-2xl\" color=\"#fff\" />\r\n          </div>\r\n        </div>\r\n        {/* Orders */}\r\n        <div className=\"w-[300px] xl:w-[200px]  h-[70px] rounded-md bg-white flex justify-between  items-center px-3\">\r\n          <div>\r\n            <div className=\"flex justify-start items-center gap-1\">\r\n              <h3 className=\"font-bold text-xl\">{allOrders}</h3>\r\n            </div>\r\n            <h6>Orders</h6>\r\n          </div>\r\n          <div className=\"w-10 h-10 rounded-full bg-slate-700 flex justify-center items-center\">\r\n            <GiShoppingCart className=\"text-2xl\" color=\"#fff\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SummaryDashboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { get_admin_dashboard_chart } from \"./../../../store/Reducers/dashboardReducer\";\r\n\r\nconst ChartDashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const [chartFilter, setChartFilter] = useState(\"month\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Fetch data when the component mounts\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    dispatch(get_admin_dashboard_chart({ info: chartFilter })).finally(() =>\r\n      setIsLoading(false)\r\n    );\r\n  }, [chartFilter, dispatch]);\r\n\r\n  const { chartRevenue = [], chartOrders = [] } = useSelector(\r\n    (store) => store.dashboard\r\n  );\r\n\r\n  // Debugging logs\r\n  useEffect(() => {\r\n    console.log(\"Filter changed:\", chartFilter);\r\n    console.log(\"Updated chartRevenue:\", chartRevenue);\r\n    console.log(\"Updated chartOrders:\", chartOrders);\r\n  }, [chartFilter, chartRevenue, chartOrders]);\r\n\r\n  // Transform revenue and orders data\r\n  const chartRevenueInThousands = Array.isArray(chartRevenue)\r\n    ? chartRevenue.map((revenue) =>\r\n        typeof revenue === \"number\" ? revenue / 1000 : 0\r\n      )\r\n    : Array(12).fill(0);\r\n\r\n  const ordersData = Array.isArray(chartOrders)\r\n    ? chartOrders\r\n    : Array(12).fill(0);\r\n\r\n  // ApexCharts config\r\n  const state = {\r\n    series: [\r\n      {\r\n        name: \"Orders\",\r\n        data: ordersData.length > 0 ? ordersData : [],\r\n      },\r\n      {\r\n        name: \"Revenue\",\r\n        data: chartRevenueInThousands.length > 0 ? chartRevenueInThousands : [],\r\n      },\r\n    ],\r\n    options: {\r\n      colors: [\"#181ee8\", \"#00d084\"],\r\n      chart: {\r\n        type: \"bar\",\r\n        background: \"transparent\",\r\n        foreColor: \"#d0d2d6\",\r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        curve: \"smooth\",\r\n        width: 1,\r\n      },\r\n      xaxis: {\r\n        categories:\r\n          chartFilter === \"month\"\r\n            ? [\r\n                \"Jan\",\r\n                \"Feb\",\r\n                \"Mar\",\r\n                \"Apr\",\r\n                \"May\",\r\n                \"Jun\",\r\n                \"Jul\",\r\n                \"Aug\",\r\n                \"Sep\",\r\n                \"Oct\",\r\n                \"Nov\",\r\n                \"Dec\",\r\n              ]\r\n            : [2025, 2024, 2023, 2022, 2021],\r\n      },\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const handleFilterChange = (e) => {\r\n    setChartFilter(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-10\">\r\n      <div className=\"flex justify-center flex-wrap mt-7\">\r\n        <div className=\"lg:w-11/12 lg:pr-3\">\r\n          <div className=\"w-full bg-[#6a5fdf] p-4 rounded-md\">\r\n            <div>\r\n              <h1 className=\"text-center text-2xl font-bold mb-4 text-white\">\r\n                Sales Chart\r\n              </h1>\r\n              <div className=\"text-end text-sm\">\r\n                <label htmlFor=\"chartFilter\" className=\"sr-only\">\r\n                  Filter by\r\n                </label>\r\n                <select\r\n                  id=\"chartFilter\"\r\n                  onChange={handleFilterChange}\r\n                  value={chartFilter}\r\n                  className=\"rounded-md\"\r\n                >\r\n                  <option value=\"month\">Monthly</option>\r\n                  <option value=\"year\">Yearly</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              {isLoading ? (\r\n                <div className=\"text-center text-white\">Loading data...</div>\r\n              ) : (\r\n                <Chart\r\n                  options={state.options || {}}\r\n                  series={state.series || {}}\r\n                  type=\"bar\"\r\n                  height={350}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartDashboard;\r\n","import React from \"react\";\r\nimport SummaryDashboard from \"./componets/SummaryDashboard\";\r\nimport ChartDashboard from \"./componets/ChartDashboard\";\r\n\r\nconst AdminDashboard = () => {\r\n  return (\r\n    <div className=\"flex flex-col justify-center\">\r\n      <div className=\"px-2 sm:px-7 my-6\">\r\n        {/* total summary */}\r\n        <SummaryDashboard />\r\n      </div>\r\n      <div>\r\n        <ChartDashboard />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"names":["SummaryDashboard","dispatch","useDispatch","useEffect","get_admin_dashboard_data","allSalesRevenue","allOrders","allProducts","allSellers","useSelector","store","dashboard","_jsx","children","_jsxs","className","FaRupeeSign","color","MdOutlineProductionQuantityLimits","MdOutlineSell","GiShoppingCart","ChartDashboard","chartFilter","setChartFilter","useState","isLoading","setIsLoading","get_admin_dashboard_chart","info","finally","chartRevenue","chartOrders","console","log","chartRevenueInThousands","Array","isArray","map","revenue","fill","ordersData","state","series","name","data","length","options","colors","chart","type","background","foreColor","dataLabels","enabled","stroke","show","curve","width","xaxis","categories","legend","position","htmlFor","id","onChange","e","target","value","Chart","height","AdminDashboard"],"sourceRoot":""}