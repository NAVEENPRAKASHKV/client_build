{"version":3,"file":"static/js/195.66fd1b57.chunk.js","mappings":"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","sources":["components/Search.jsx","views/Pagination.jsx","views/admin/Sellers.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Search = ({ setPerPage, searchValue, setSearchValue }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"h-14 bg-slate-600 rounded-t-md flex justify-between items-center px-4\">\r\n        <select\r\n          onChange={(e) => setPerPage(parseInt(e.target.value))}\r\n          className=\"px-3 py-2 rounded font-semibold\"\r\n        >\r\n          <option value=\"5\">5</option>\r\n          <option value=\"10\">10</option>\r\n          <option value=\"15\">15</option>\r\n        </select>\r\n        <input\r\n          value={searchValue}\r\n          onChange={(e) => setSearchValue(e.target.value)}\r\n          className=\"hidden md:block bg-white border border-gray-300 h-10 px-3 py-1 rounded focus:outline-none focus:border-blue-500\"\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport {\r\n  MdOutlineKeyboardDoubleArrowLeft,\r\n  MdOutlineKeyboardDoubleArrowRight,\r\n} from \"react-icons/md\";\r\n\r\nconst Pagination = ({\r\n  pageNumber,\r\n  setPageNumber,\r\n  totalItem,\r\n  perPage,\r\n  showItem,\r\n}) => {\r\n  const totalPage = Math.ceil(totalItem / perPage); // Total pages\r\n  let startPage = pageNumber; // Starting page number\r\n  const diff = totalPage - pageNumber;\r\n\r\n  // Adjust startPage if the difference between totalPage and current page is less than showItem\r\n  if (diff <= showItem) {\r\n    startPage = totalPage - showItem + 1;\r\n  }\r\n\r\n  let endPage = startPage < 1 ? showItem : showItem + startPage; // End page number\r\n\r\n  if (startPage <= 0) startPage = 1; // Ensure startPage is valid\r\n  if (endPage > totalPage + 1) endPage = totalPage + 1; // Ensure endPage doesn't exceed total pages\r\n\r\n  const createBtn = () => {\r\n    const btns = [];\r\n    for (let i = startPage; i < endPage; i++) {\r\n      btns.push(\r\n        <li\r\n          key={i}\r\n          onClick={() => setPageNumber(i)}\r\n          className={`${\r\n            pageNumber === i\r\n              ? \"bg-green-600 text-white\"\r\n              : \"bg-slate-600 hover:bg-green-900 text-[#d0d2d6]\"\r\n          } w-[33px] h-[33px] rounded-full flex justify-center items-center cursor-pointer`}\r\n        >\r\n          {i}\r\n        </li>\r\n      );\r\n    }\r\n    return btns;\r\n  };\r\n\r\n  return (\r\n    <ul className=\"flex gap-3 items-center\">\r\n      {/* Previous Button */}\r\n      {pageNumber > 1 && (\r\n        <li\r\n          onClick={() => setPageNumber(pageNumber - 1)}\r\n          className=\"w-[33px] h-[33px] rounded-full flex justify-center items-center bg-slate-400 text-black cursor-pointer hover:bg-indigo-400\"\r\n        >\r\n          <MdOutlineKeyboardDoubleArrowLeft />\r\n        </li>\r\n      )}\r\n\r\n      {/* Page Buttons */}\r\n      {createBtn()}\r\n\r\n      {/* Next Button */}\r\n      {pageNumber < totalPage && (\r\n        <li\r\n          onClick={() => setPageNumber(pageNumber + 1)}\r\n          className=\"w-[33px] h-[33px] rounded-full flex justify-center items-center bg-slate-400 text-black cursor-pointer hover:bg-indigo-400\"\r\n        >\r\n          <MdOutlineKeyboardDoubleArrowRight />\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from \"../Pagination\";\r\nimport { FaEye } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Search from \"../../components/Search\";\r\nimport { get_seller_request } from \"../../store/Reducers/sellerReducer\";\r\n\r\nconst Sellers = () => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [perPage, setPerPage] = useState(5);\r\n  const dispatch = useDispatch();\r\n  const { sellers, totalSeller } = useSelector((store) => store.seller);\r\n\r\n  useEffect(() => {\r\n    dispatch(get_seller_request({ perPage, searchValue, page: currentPage }));\r\n  }, [dispatch, searchValue, perPage, currentPage]);\r\n\r\n  if (!sellers) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div className=\"px-2 lg:pr-7 my-6\">\r\n      {/* Sellers List Section */}\r\n      <div className=\"w-full  bg-white shadow-md rounded-md\">\r\n        {/* Table Header */}\r\n        <div>\r\n          <Search\r\n            setSearchValue={setSearchValue}\r\n            searchValue={searchValue}\r\n            setPerPage={setPerPage}\r\n          />\r\n        </div>\r\n        {/* Table Body */}\r\n        <div className=\"p-4\">\r\n          <table className=\"table-auto w-full text-center border-collapse border border-gray-300\">\r\n            <thead>\r\n              <tr className=\"bg-gray-200\">\r\n                <th className=\"border border-gray-300 px-4 py-2\">No</th>\r\n                <th className=\"border border-gray-300 px-4 py-2\">Image</th>\r\n                <th className=\"border border-gray-300 px-4 py-2\">Name</th>\r\n                <th className=\"border border-gray-300 px-4 py-2\">Shop Name</th>\r\n                <th className=\"border border-gray-300 px-4 py-2\">\r\n                  Account status\r\n                </th>\r\n                <th className=\"border border-gray-300 px-4 py-2\">\r\n                  Payment Status\r\n                </th>\r\n                <th className=\"border border-gray-300 px-4 py-2\">Email</th>\r\n\r\n                <th className=\"border border-gray-300 px-4 py-2\">View</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sellers.map((item, index) => {\r\n                const {\r\n                  _id,\r\n                  username,\r\n                  email,\r\n                  status,\r\n                  payment,\r\n                  image,\r\n                  shopInfo,\r\n                } = item;\r\n\r\n                return (\r\n                  <tr\r\n                    key={_id}\r\n                    className=\"hover:bg-gray-100 h-[60px] border-t text-sm\"\r\n                  >\r\n                    <td className=\"border  border-gray-300 px-4 py-2\">\r\n                      {index + 1}\r\n                    </td>\r\n                    <td className=\"border border-gray-300 px-4 py-2\">\r\n                      <img\r\n                        src={image}\r\n                        alt={username}\r\n                        className=\"w-12 h-12 rounded-full mx-auto\"\r\n                      />\r\n                    </td>\r\n                    <td className=\"border border-gray-300 px-4 py-2 text-black\">\r\n                      {username}\r\n                    </td>\r\n                    <td className=\"border border-gray-300 px-4 py-2\">\r\n                      {shopInfo?.shopName}\r\n                    </td>\r\n                    <td className=\"border border-gray-300 px-4 py-2\">\r\n                      {status}\r\n                    </td>\r\n                    <td className=\"border border-gray-300 px-4 py-2\">\r\n                      {payment}\r\n                    </td>\r\n                    <td className=\"border border-gray-300 px-4 py-2\">\r\n                      {email}\r\n                    </td>\r\n\r\n                    <td className=\"border border-gray-300 px-4 py-2\">\r\n                      <div className=\"flex justify-center gap-3\">\r\n                        <Link\r\n                          to={`/admin/dashboard/sellers/details/${_id}`}\r\n                          className=\"px-3 py-2 rounded-full hover:bg-blue-200 text-lg\"\r\n                        >\r\n                          <FaEye />\r\n                        </Link>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n          {/* pagination */}\r\n          <div className=\"w-full flex justify-end mt-4 bottom-4 right-4\">\r\n            <Pagination\r\n              pageNumber={currentPage}\r\n              setPageNumber={setCurrentPage}\r\n              totalItem={totalSeller}\r\n              perPage={perPage}\r\n              showItem={3}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sellers;\r\n"],"names":["_ref","setPerPage","searchValue","setSearchValue","_jsx","children","_jsxs","className","onChange","e","parseInt","target","value","type","placeholder","pageNumber","setPageNumber","totalItem","perPage","showItem","totalPage","Math","ceil","startPage","endPage","onClick","MdOutlineKeyboardDoubleArrowLeft","createBtn","btns","i","push","MdOutlineKeyboardDoubleArrowRight","Sellers","useState","currentPage","setCurrentPage","dispatch","useDispatch","sellers","totalSeller","useSelector","store","seller","useEffect","get_seller_request","page","Search","map","item","index","_id","username","email","status","payment","image","shopInfo","src","alt","shopName","Link","to","FaEye","Pagination"],"sourceRoot":""}